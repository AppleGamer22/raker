// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
)

type Querier interface {
	HistoryAdd(ctx context.Context, arg HistoryAddParams) (History, error)
	HistoryGet(ctx context.Context, arg HistoryGetParams) (History, error)
	HistoryGetExclusive(ctx context.Context, arg HistoryGetExclusiveParams) ([]History, error)
	// https://docs.sqlc.dev/en/stable/howto/select.html#passing-a-slice-as-a-parameter-to-a-query
	// https://docs.sqlc.dev/en/stable/howto/named_parameters.html
	HistoryGetInclusive(ctx context.Context, arg HistoryGetInclusiveParams) ([]History, error)
	HistoryRemove(ctx context.Context, arg HistoryRemoveParams) error
	HistoryUpdateCategories(ctx context.Context, arg HistoryUpdateCategoriesParams) error
	HistoryUpdateOwner(ctx context.Context, arg HistoryUpdateOwnerParams) error
	UpdateHistoryRemoveFile(ctx context.Context, arg UpdateHistoryRemoveFileParams) error
	UserCategoryAdd(ctx context.Context, arg UserCategoryAddParams) error
	UserCategoryRemove(ctx context.Context, arg UserCategoryRemoveParams) error
	UserGet(ctx context.Context, username string) (User, error)
	UserUpdateHash(ctx context.Context, arg UserUpdateHashParams) error
	UserUpdateInstagramSession(ctx context.Context, arg UserUpdateInstagramSessionParams) error
	UserUser(ctx context.Context, arg UserUserParams) error
}

var _ Querier = (*Queries)(nil)
