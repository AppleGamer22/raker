// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type Type string

const (
	TypeInstagram Type = "instagram"
	TypeHighlight Type = "highlight"
	TypeStory     Type = "story"
	TypeTiktok    Type = "tiktok"
	TypeVsco      Type = "vsco"
)

func (e *Type) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Type(s)
	case string:
		*e = Type(s)
	default:
		return fmt.Errorf("unsupported scan type for Type: %T", src)
	}
	return nil
}

type NullType struct {
	Type  Type
	Valid bool // Valid is true if Type is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullType) Scan(value interface{}) error {
	if value == nil {
		ns.Type, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Type.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Type), nil
}

type History struct {
	Username   sql.NullString
	Type       string
	Owner      string
	Post       string
	Date       time.Time
	Files      []string
	Categories []string
}

type Owner struct {
	Owner string
	Type  string
}

type User struct {
	Username           string
	Hash               string
	InstagramSessionID string
	InstagramUserID    string
	Network            string
	Categories         []string
}
